/***************************************************************************
*               Generated by StarUML(tm) C++ Add-In                        *
***************************************************************************/
/***************************************************************************
*                                                                          *
*           Institute of Industrial and Control Engineering                *
*                 Technical University of Catalunya                        *
*                        Barcelona, Spain                                  *
*                                                                          *
*                Project Name:       Kautham Planner                       *
*                                                                          *
*     Copyright (C) 2007 - 2009 by Alexander Pérez and Jan Rosell          *
*            alexander.perez@upc.edu and jan.rosell@upc.edu                *
*                                                                          *
*             This is a motion planning tool to be used into               *
*             academic environment and it's provided without               *
*                     any warranty by the authors.                         *
*                                                                          *
*          Alexander Pérez is also with the Escuela Colombiana             *
*          de Ingeniería "Julio Garavito" placed in Bogotá D.C.            *
*             Colombia.  alexander.perez@escuelaing.edu.co                 *
*                                                                          *
***************************************************************************/
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
 
 

#if !defined(_GUIBROPLANNER_H)
#define _GUIBROPLANNER_H

#include <libproblem/workspace.h>
#include <libsampling/sampling.h>
#include "localplanner.h"
#include "planner.h"
#include "prmplanner.h"

using namespace std;
using namespace libSampling;

namespace libPlanner {
  namespace PRM{
   namespace GUIBRO{

	   /*
	//!Function that filters out edges with negative weigh
	template <typename EdgeWeightMap>
		struct negative_edge_weight {
			negative_edge_weight() { }
			negative_edge_weight(EdgeWeightMap weight) : m_weight(weight) { }
			template <typename Edge>
				bool operator()(const Edge& e) const {
					return get(m_weight, e) > 0.0;
				}
			EdgeWeightMap m_weight;
	};

	//!Graph representing the subgraph of the grid without the edges that have the source or target
	//!vertex associated to a collision sample
	typedef filtered_graph<PRMGraph, negative_edge_weight<WeightMap> > guibroGraph;
	*/

    class GUIBROPlanner:public PRMPlanner {
	    public:
        GUIBROPlanner(SPACETYPE stype, Sample *init, Sample *goal, SampleSet *samples, Sampler *sampler, 
          WorkSpace *ws, LocalPlanner *lcPlan, KthReal ssize);
        ~GUIBROPlanner();

		bool trySolve();
		bool setParameters();
		//Add public data and functions

		protected:
		//Add protected data and functions	
		int _firstParameter;
		double _secondParameter;
		double _thirdParameter;	

	    private:
		//Add private data and functions

	  };
   }
  }
}


#endif // _GUIBROPLANNER_H
